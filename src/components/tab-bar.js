import React from 'react'import Button from './button'import { IconSearch, IconHistory, IconFav } from './icons'import Box from './box'import theme from '../utils/theme'function TabBar({ state, descriptors, navigation }) {  const focusedOptions = descriptors[state.routes[state.index].key].options  if (focusedOptions.tabBarVisible === false) {    return null  }  return (    <Box      pb={4}      backgroundColor="white"      flexDirection="row"      style={{        shadowColor: '#000',        shadowOpacity: 0.1,        shadowRadius: 14      }}    >      {state.routes.map((route, index) => {        const { options } = descriptors[route.key]        const label =          options.tabBarLabel !== undefined            ? options.tabBarLabel            : options.title !== undefined            ? options.title            : route.name        const isFocused = state.index === index        const onPress = () => {          const event = navigation.emit({            type: 'tabPress',            target: route.key,            canPreventDefault: true          })          if (!isFocused && !event.defaultPrevented) {            navigation.navigate(route.name)          }        }        return label === 'Search' ? (          // Search button          <Box key={label} p={15} mt={-15} bg="white" borderRadius="full">            <Button size={56} bg="red" borderRadius="full" onPress={onPress}>              <IconSearch color="white" />            </Button>          </Box>        ) : (          // Tab-bar          <Button            key={label}            pt={6}            flexDirection="column"            height={56}            flex={1}            onPress={onPress}          >            {label === 'Favorite' && (              <IconFav                color={isFocused ? theme.colors.red : theme.colors.textLight}              />            )}            {label === 'History' && (              <IconHistory                color={isFocused ? theme.colors.red : theme.colors.textLight}              />            )}            {/* Indicator */}            <Box              size={4}              bg={isFocused ? 'red' : 'white'}              mt={4}              borderRadius="full"            />          </Button>        )      })}    </Box>  )}export default TabBar